/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */


import {
  MyComponent as MyComponent
} from './components/my-component/my-component';

declare global {
  interface HTMLMyComponentElement extends MyComponent, HTMLElement {
  }
  var HTMLMyComponentElement: {
    prototype: HTMLMyComponentElement;
    new (): HTMLMyComponentElement;
  };
  interface HTMLElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  interface ElementTagNameMap {
    "my-component": HTMLMyComponentElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-component": JSXElements.MyComponentAttributes;
    }
  }
  namespace JSXElements {
    export interface MyComponentAttributes extends HTMLAttributes {
      
        first?: string,
        last?: string
    }
  }
}


import {
  myDropdown as MyDropdown
} from './components/my-dropdown/my-dropdown';

declare global {
  interface HTMLMyDropdownElement extends MyDropdown, HTMLElement {
  }
  var HTMLMyDropdownElement: {
    prototype: HTMLMyDropdownElement;
    new (): HTMLMyDropdownElement;
  };
  interface HTMLElementTagNameMap {
    "my-dropdown": HTMLMyDropdownElement;
  }
  interface ElementTagNameMap {
    "my-dropdown": HTMLMyDropdownElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      "my-dropdown": JSXElements.MyDropdownAttributes;
    }
  }
  namespace JSXElements {
    export interface MyDropdownAttributes extends HTMLAttributes {
      
        name?: string
    }
  }
}

